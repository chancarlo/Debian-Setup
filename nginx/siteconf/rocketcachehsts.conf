set $serve_cache_nginx 1;		# Flag if cached files should be served directly by NGINX
set $cache_file "";				# Location of cached file
set $cache_url "";				# URL of cached file
set $https_suffix "";			# Suffix for https
set $compression "";			# Gzip or Brotli
set $rocket_mobile_detection "$document_root/wp-content/cache/wp-rocket/$http_host/$request_uri/.mobile-active";

# Check if request is https
if ($https = "on") {
	set $https_suffix "-https";
}

# Check if GZIP is accepted by client
if ($http_accept_encoding ~ gzip) {
	set $compression "_gzip";
}

# Check if Brotli is accepted by client, if so, serve the non-compressed file
# NGINX will compress to .br then serve
if ($http_accept_encoding ~ br) {
	set $compression "";
}

set $file_suffix "/cache/wp-rocket/$http_host$request_uri/index$https_suffix.html$compression";
if ($request_uri = "/") {
	set $file_suffix "/cache/wp-rocket/$http_host${request_uri}index$https_suffix.html$compression";
}

set $cache_url "/wp-content$file_suffix";
set $cache_file "$document_root$cache_url";

# POST requests and urls with a query string should always go to PHP
if ($request_method = POST) {
    set $serve_cache_nginx 0;
}

if ($query_string != "") {
    set $serve_cache_nginx 0;
}

# Do not serve cached file directly if the site is in maintenance mode
if (-f "$document_root/.maintenance") {
    set $serve_cache_nginx 0;
}

# Do not serve cached file directly if URLs containing the following strings
if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
    set $serve_cache_nginx 0;
}

# Do not serve cached file if mobile cache is activated
if (-f "$rocket_mobile_detection") {
	set $serve_cache_nginx 0;
}

# Do not serve cached file directly if the cookies containing the following strings
if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in") {
    set $serve_cache_nginx 0;
}

if ($http_cookie ~* "(wordpress_logged_in_|wp\-postpass_|woocommerce_items_in_cart|woocommerce_cart_hash|wptouch_switch_toogle|comment_author_|comment_author_email_|yith_wcwl_products)") {
    set $serve_cache_nginx 0;
}

# Do not serve cached file that does not exist (of course)
if (!-f "$cache_file") {
	set $serve_cache_nginx 0;
}

# If the flag is still on, serve cached files directly, rewrite URL to the cache location
if ($serve_cache_nginx = 1) {
	rewrite .* "$cache_url" last;
}

# Add header to HTML cached files
location ~ /wp-content/cache/wp-rocket/.*html$ {
    include /etc/nginx/siteconf/cachemustinclude.conf;
    add_header Strict-Transport-Security max-age=15768000;
}

# Do not gzip cached files that are already gzipped
location ~ /wp-content/cache/wp-rocket/.*_gzip$ {
    include /etc/nginx/siteconf/cachemustinclude.conf;
    add_header Strict-Transport-Security max-age=15768000;

	gzip off;
	types {}
	default_type text/html;
	add_header Content-Encoding gzip;
}