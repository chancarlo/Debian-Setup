# PHP Cache settings
fastcgi_cache_key "$scheme$request_method$host$request_uri";
fastcgi_cache_use_stale error timeout invalid_header updating http_500 http_503;
fastcgi_cache_valid 200 301 302 404 1h;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

set $skip_cache 0;
# POST requests and URL with a query string should always go to php
if ($request_method = POST) {
  set $skip_cache 1;
}

if ($query_string != "") {
  set $skip_cache 1;
}

# Don't cache URL containing the following segments
if ($request_uri ~* "(/wp-admin/|/xmlrpc.php|wp-.*.php|index.php|/feed/|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)") {
  set $skip_cache 1;
}

# Don't use the cache for logged in users or recent commenter or customer with items in cart
if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in|woocommerce_items_in_cart") {
  set $skip_cache 1;
}

location ~ ^/wp-content/cache/minify/(.+\.(css|js))$ {
  try_files $uri /wp-content/plugins/w3-total-cache/pub/minify.php?file=$1;
}

#location ~ \.php$ {
#    try_files $uri =404;
location ~ [^/]\.php(/|$) {
fastcgi_split_path_info ^(.+?\.php)(/.*)$;
  if (!-f $document_root$fastcgi_script_name) {
      return 404;
  }
  include fastcgi_params;
  # Wordpress settings
  fastcgi_param  SCRIPT_FILENAME   $document_root$fastcgi_script_name;

  fastcgi_pass phpbackend;
  fastcgi_cache_bypass $skip_cache;
  fastcgi_no_cache $skip_cache;
  fastcgi_cache PHPCACHE;
  fastcgi_cache_valid 200 30m;
  fastcgi_cache_methods GET HEAD; # What to cache: only GET and HEAD requests (not POST)
  add_header X-Fastcgi-Cache $upstream_cache_status; # Add header so we can see if the cache hits or misses

}

location ~ /purge(/.*) {
  fastcgi_cache_purge PHPCACHE "$scheme$request_method$host$1";
  access_log off;
}
